/* css reset, via Josh Comeau https://www.joshwcomeau.com/css/custom-css-reset/ */
/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after { box-sizing: border-box; }

/* 2. Remove default margin */
* { margin: 0; }

body { 
  /* 3. Add accessible line-height */ 
  line-height: 1.5;
  /* 4. Improve text rendering */ 
  -webkit-font-smoothing: antialiased;
}

/* 5. Improve media defaults */
img, picture, video, canvas, svg { display: block; max-width: 100%; }

/* 6. Inherit fonts for form controls */
input, button, textarea, select { font: inherit; }

/* 7. Avoid text overflows */
p, h1, h2, h3, h4, h5, h6 { overflow-wrap: break-word; }

/* 8. Improve line wrapping */
p { text-wrap: pretty; }
h1, h2, h3, h4, h5, h6 { text-wrap: balance; }

/* 9. Create a root stacking context */
#root, #__next { isolation: isolate; }

/* shared variables */
:root {
  --board-frame: #8B4513;   /* warm red-brown */
  --board-border: #4A2800;  /* deep brown */
  --board-bg: #F5E6D3;      /* warm ivory */
  --stripe: #436B95;        /* muted blue */
  --alt-stripe: #D4C5AA;    /* light tan/beige */
  --white-piece: #ddd;      /* slightly off-white*/
  --black-piece: #222;      /* achieve a muted matte */
  --stripe-border: black;
  --piece-border: black;

  --ui-font: "Lucida Grande";
  --heading-font: "Palatino";

  --board-height: min(48vw, 400px);
  --piece-size: calc(var(--board-height) / 18);
  --frame-width: calc(0.08 * var(--board-height));
  --frame-height: calc(var(--board-height) + 2 * (var(--frame-width)));
  --angle-length: calc(0.45 * var(--board-height));
  --angle-width: calc(var(--angle-length) / 3);
  --board-width: calc(12 * var(--angle-width) + 3 * var(--frame-width));

  /* faint checkered stripe pattern for board background */
  --bg-check: color-mix(in srgb, var(--board-bg) 95%, black);
  --board-texture: 
  repeating-linear-gradient(
    45deg,
    transparent,
    transparent 5px,
    var(--bg-check) 5px,
    var(--bg-check) 6px
  ),
  repeating-linear-gradient(
    135deg,
    transparent,
    transparent 5px,
    var(--bg-check) 5px,
    var(--bg-check) 6px
  ),
  var(--board-bg);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Lucida Grande";
}

div#board {
  text-align: center;
  position: relative;
  padding-right: var(--frame-width);
  background: var(--board-texture);
  box-shadow: 
    inset 0 5px 5px rgba(0,0,0,0.8),
    0 4px 8px rgba(0,0,0,0.3),
    0 2px 4px rgba(0,0,0,0.2);
  z-index: 0;
}

.home-count {
  margin-top: var(--frame-width);
  margin-bottom: calc(var(--frame-width) + 12px);
  font-size: 10px;
  text-align: center;
  padding: 1px;
  background: rgba(255, 255, 255, 0.6);
  border-radius: 2px;
}

.home-count.just-moved {
  box-shadow: inset 0 0 2px 2px rgba(255, 166, 0, 1);
  background: radial-gradient(circle at 35% 35%, 
    white 50%, 
    rgba(255, 166, 0, 1) 100%
  );
}

.home {
  position: absolute;
  height: var(--frame-height);
  width: var(--frame-width);
  filter: url(#mahogany-filter-vertical);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  z-index: 1;
  border: 2px solid var(--board-border);
  border-right: none;
}

.frame {
  margin-left: var(--frame-width);
  height: var(--frame-width);
  filter: url(#mahogany-filter-horizontal);
  border-bottom: 2px solid var(--board-border);
  border-top: 2px solid var(--board-border);
}

.right {
  position: absolute;
  height: var(--frame-height);
  width: var(--frame-width);
  filter: url(#mahogany-filter-vertical);
  top: 0;
  right: 0; 
  z-index: 1;
}

.frame, .right, .home, .frame-bottom {
  background: var(--board-frame);
  box-shadow:
    inset 0 1px 2px rgba(255,255,255,0.1),
    inset 0 -1px 2px rgba(0,0,0,0.2);
}

.top,
.bottom {
  display: flex;
  margin-left: var(--frame-width);
  border: 2px solid var(--board-border);
  border-top: none;
  border-bottom: none;
  height: calc(var(--board-height) / 2);
}

.bottom {
  transform: rotate(180deg);
}

.roll {
  --clip-size: calc(var(--board-height) / 50);
  --die-size: calc(6.5 * var(--clip-size));
  position: absolute;
  top: calc(var(--angle-length) + var(--frame-width) - var(--clip-size));
  left: 165px;
}

.roll img {
  clip-path: inset(var(--clip-size) round var(--clip-size));
  width: var(--die-size);
  display: inline-block;
}

.bottom .label {
  /* flip label back around */
  transform: rotate(180deg);
}

.bar {
  display: inline-block;
  width: var(--frame-width);
  height: calc(var(--board-height) / 2);
  position: relative;  /* For pseudo-element positioning */
  border-left: 2px solid var(--board-border);
  border-right: 2px solid var(--board-border);
  box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
  transform: rotate(180deg);
}

.bar::before {
  content: '';
  position: absolute;
  background-color: var(--board-frame);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: url(#mahogany-filter-vertical);
  pointer-events: none;
}

.bar .piece {
  margin: auto;
  margin-bottom: 5px;
  margin-top: 5px;
  isolation: isolate;
  box-shadow: 0 0 4px 0 rgba(255, 255, 255, 0.5);
}

.piece.just-moved {
  box-shadow: 0 0 1px 1px rgba(255, 166, 0, 0.9),  /* inner orange glow */
              0 0 1px 3px rgba(255, 166, 0, 0.6);  /* outer orange glow */
}

.piece.ghost {
  background: none;
  border: 2px dashed rgba(180, 180, 180, 0.7);
  --ghost-shadow: rgba(255, 255, 255, 0.5);
  --ghost-shadow-outer: rgba(255, 255, 255, 0.2);
  box-shadow: 0 0 1px 1px var(--ghost-shadow),  
              0 0 2px 3px var(--ghost-shadow-outer), 
              inset 0 0 1px 1px var(--ghost-shadow),  
              inset 0 0 2px 3px var(--ghost-shadow-outer); 
}

.angle.red::before {
  background: linear-gradient(135deg,
    color-mix(in srgb, var(--stripe) 85%, white) 0%,
    var(--stripe) 50%,
    color-mix(in srgb, var(--stripe) 95%, black) 100%
  );
  filter: url(#felt-filter);
}

.angle.gray::before {
  background: linear-gradient(135deg,
    color-mix(in srgb, var(--alt-stripe) 85%, white) 0%,
    var(--alt-stripe) 50%,
    color-mix(in srgb, var(--alt-stripe) 95%, black) 100%
  );
  filter: url(#felt-filter);
}

.angle {
  display: inline-block;
  position: relative;
  width: var(--angle-width);
  height: var(--angle-length);
}

.angle::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  clip-path: polygon(0% 0%, 50% 100%, 100% 0%);
  z-index: 1;
}

/* stitches */
.angle::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  pointer-events: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 100 100 100'%3E%3Cpath d='M0,0 L50,300 L100,0' fill='none' stroke='rgba(0,0,0,0.8)' stroke-width='0.3' stroke-dasharray='3 3' stroke-linecap='round'/%3E%3C/svg%3E");
  background-size: 100% 100%;
}

.angle .label {
  position: relative;
  z-index: 2;
  font-size: 10px;
  /* margin: 2px; */
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
}

.angle .pieces {
  position: relative;
  z-index: 2;
}

.piece {
  display: block;
  border-radius: 100%;
  width: var(--piece-size);
  height: var(--piece-size);
  margin: auto;
  margin-bottom: 3px;
  box-shadow: 
    /* Inner highlight */
    inset 0 1px 2px rgba(255, 255, 255, 0.2),
    /* Drop shadow with slight spread */
    0 2px 4px rgba(0, 0, 0, 0.15),
    /* Ambient occlusion - darker, tighter shadow */
    0 1px 2px rgba(0, 0, 0, 0.3);
}

.w {
  background: radial-gradient(circle at 35% 35%, 
    white 30%, 
    var(--white-piece) 100%
  );
}

.b {
  background: radial-gradient(circle at 35% 35%, 
    #444 30%, 
    var(--black-piece) 100%
  );
}

.piece:hover {
  border: 1px solid skyblue;
}

body {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: center;
  height: 99vh;
  width: 100vw;
}

.container, #game {
  border: 1px solid black;
  margin: 4px;
  max-height: calc(var(--board-height) * 1.8);
}

.container {
  overflow-y: auto;
  padding: 8px;
  min-height: 250px;
  width: 330px;
  flex: 1 1 240px;
  max-width: 410px;
  display: flex;
  position: relative;
  flex-direction: column;
}

#game {
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
}

#turn-history {
  overflow: auto;
  width: 100%;
  margin-bottom: 2rem;
}

@media (max-width: 1340px) {
  body {
    align-content: flex-start;
  }

  #game {
    /* clear the other components */
    margin-left: 500px; 
    margin-right: 500px;
    order: 0;
  }

  .container {
    width: 240px;
  }

  #history-container {
    order: 1;
  }

  #strategy {
    order: 2;
  }
}

#steppers {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 0.5rem 0;
  margin: 1rem 0;
  max-width: var(--board-width);
}

#controls {
  padding: 8px 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

#turn-info {
  margin: 8px auto; 
  padding: 8px;
  text-align: left;
  max-width: calc(var(--board-width) - 200px);
  border: 1px solid rgba(150, 150, 150, 0.5);
  border-radius: 3px;
  flex: 1 1 90px;
  font-size: 14px;
}

#controls button {
  padding: 0.2em 0.5em;
  border-radius: 4px;
  font-size: 1.1rem;
  margin: 0 0.5rem;
  height: max-content;
  min-width: 50px;
  cursor: pointer;
}

#controls button:hover {
  /* border: 1px solid skyblue; */
  box-shadow: 0 0 2px 1px skyblue;
}

#controls button:focus {
  box-shadow: 0 0 2px 4px skyblue;
}

#controls button[disabled] {
  cursor: default;
}

#controls button:hover[disabled] {
  box-shadow: unset;
}

#controls div {
  width: 100%;
}

button#play {
  padding: 0.5em 1em;
  border-radius: 4px;
  font-size: 20px;
}

button#newgame {
  display: block;
  margin: auto;
}

button#reset {
  padding: 0;
  font-size: 1.6rem;
}

.frame-bottom {
  font-size: 14px;
  font-weight: normal;
  filter: url(#mahogany-filter-horizontal);
  height: var(--frame-width);
  padding-left: 45px; /* centering, account for right frame */
  text-align: center;
  border-top: 2px solid var(--board-border);
}

.history-turn {
  padding: 2px 0;
  display: grid;
  /* Three columns: turn number, dice roll, and moves */
  grid-template-columns: 1em 3em 1fr;
  gap: 4px;
  align-items: center;
  overflow-x: clip;
}

.history-turn.history-current {
  box-shadow: inset 0 0 2px 1px rgba(255, 166, 0, 1);
}

.turn-number {
  font-size: 0.6em;
  color: #666;
  text-align: center;
  padding-left: 2px;
}

.turn-roll {
  font-size: 1.5em;
  line-height: 1em;
  display: inline-block;
  min-width: 3em;
  vertical-align: middle;
  position: relative;
  top: -0.1em;  /* Fine-tune this value as needed */
}

.turn-moves {
  font-size: 13px;
  padding-left: 8px;
  margin-left: 4px;
  white-space: nowrap;
}

.turn-moves.no-moves {
  font-style: italic;
  font-size: 0.8em;
  color: #666;
}

.turn-moves.has-passes {
  font-style: italic;
  color: #333;
}

.white-turn {
  border-left: 6px solid var(--white-piece);
  box-shadow: inset 1px 0 0 #ccc;
  background-color: rgba(255, 255, 255, 0.4);
}

.black-turn {
  border-left: 6px solid var(--black-piece);
  box-shadow: inset 1px 0 0 #ccc;
  background-color: rgba(0, 0, 0, 0.05);
}

.turn-pair-start {
  margin-top: 4px;
}

.winner-banner {
  text-align: center;
  font-weight: bold;
  padding: 4px 0;
  color: #333;
}

.turn-description {
  font-size: 13px;
  padding: 6px;
  text-wrap: balance;
}

/* show / collapse the longer description */
.history-turn {
  cursor: pointer;
  position: relative;  /* for positioning the indicator */
}

.history-turn:hover {
  transition: border-left-width 0.2s;
}

.expand-indicator {
  display: none;
  position: absolute;
  top: 4px;
  right: 8px;
  color: #666;
  font-size: 13px;
}

.history-turn:hover .expand-indicator {
  display: inline;
}

.history-turn.expanded .expand-indicator {
  display: inline;
}

.history-turn.expanded .turn-description {
  font-size: 13px;
  grid-column: 1 / -1;  /* span all columns */
}

/* secondary buttons */
.reset-scores, .history-control, .show-turn {
  font-size: 0.7rem;
  padding: 3px 8px;
  border: 1px solid #ccc;
  margin: 4px;
  border-radius: 3px;
  background: none;
  cursor: pointer;
  width: fit-content;
}

.reset-scores[disabled], .history-control[disabled], .show-turn[disabled] {
  cursor: unset;
}
.reset-scores:hover[disabled], .history-control:hover[disabled], .show-turn:hover[disabled] {
  background: unset;
}

.history-control:hover {
  background: #f5f5f5;
}

.reset-scores {
  align-self: end;
}

.reset-scores:hover {
  background: #fee2e2;
}

.history-controls {
  position: absolute; 
  bottom: 0;
  padding: 4px;
  display: flex;
}

.arrow-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  overflow: visible;
}

.arrow-container svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#strategy .picker { 
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
  margin: 4px auto;
  padding: 8px 0;
  max-width: 400px;
  font-size: 13px;
}

.black-picker {
  border-left: 6px solid black;
  background: rgba(0, 0, 0, 0.05);
}

.white-picker {
  border-left: 6px solid var(--white-piece);
}

#strategy .picker select {
  padding: 2px 4px;
  width: 150px;
  border: 1px solid #ccc;
  background-color: white;
}

#strategy .picker label {
  font-weight: 600;
  text-transform: capitalize;
}

.strategy-description {
  padding: 10px 4px 6px 32px;
  line-height: 1.22;
  white-space: pre-wrap;
  max-height: 200px;
  overflow: scroll;
  font-size: 12px;
}

.scores {
  display: flex;
  flex-direction: column;
  font-size: 13px;
}

.stats-table {
  margin: 1em auto;
  width: 100%;
  max-width: 500px;
  border-collapse: collapse;
}

.stats-table th,
.stats-table td {
  padding: 4px;
  text-align: left;
  border-bottom: 1px solid #eee;
}

.stats-table th:last-child, .stats-table td:last-child {
  text-align: right;
}

.stats-table th {
  font-weight: normal;
  color: #666;
}

.stats-table td.empty-state {
  text-align: center;
  color: #666;
  padding: 20px;
}


/* Move highlighting for human play */
.valid-source .piece:not(.ghost):not(:has(~ :not(.ghost))) {
  cursor: pointer;
  box-shadow: 
    0 0 2px 2px rgba(255, 255, 0, 0.4),
    0 0 4px 4px rgba(255, 255, 0, 0.2);
}

.valid-source .piece:not(.ghost):not(:has(~ :not(.ghost))):hover {
  box-shadow: 
    0 0 3px 3px rgba(255, 255, 0, 0.6),
    0 0 6px 6px rgba(255, 255, 0, 0.3);
}

.piece.selected {
  box-shadow: 
  0 0 2px 2px rgba(255, 90, 255, 0.6),
  0 0 4px 4px rgba(255, 90, 255, 0.3);
}

.valid-destination {
  cursor: pointer;
  position: relative;
}


/* Add a semi-transparent overlay to show valid landing spots */
.valid-destination::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 100 100 100'%3E%3Cpath d='M0,0 L50,300 L100,0' fill='none' stroke='rgba(255, 90, 255, 0.6)' stroke-width='5' stroke-linecap='round'/%3E%3C/svg%3E");
    pointer-events: none;  /* Allow clicks to pass through */
    z-index: 3;  /* Above pieces but below arrows */
}

/* When highlighting home */
.home-count.valid-destination {
  box-shadow: 0 0 4px 4px rgba(255, 90, 255, 1);
}

.home-count.valid-destination::after {
  background-image: none;
}

/* styles for hiding / showing sections */

.section-header {
  display: flex;
  cursor: pointer;
  justify-content: space-between;
  align-items: center;
  gap: 4px;
  padding: 2px;
  font-size: 12px;
  color: #666;
}

.section-header span {
  font-weight: 600;
}

.toggle-button {
  background: none;
  border: 1px solid #ddd;
  cursor: pointer;
  border-radius: 3px;
  width: 16px;
  height: 16px;
  font-size: 12px;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.toggle-button:hover {
  background: #f5f5f5;
}

.section-content.collapsed {
  display: none;
}

.container.collapsed {
  height: 2.5rem;
  min-height: unset;
}

.container.collapsed #turn-history {
  margin-bottom: 0;
}
